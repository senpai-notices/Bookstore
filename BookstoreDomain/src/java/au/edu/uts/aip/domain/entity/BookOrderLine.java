package au.edu.uts.aip.domain.entity;

import java.io.Serializable;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQuery;

/**
 * A Data model class related to the BookOrderLine table in the database. BookOrderLine entity
 * describes the items that is in the shopping cart It has properties id, book and quantity All the
 * attributes of this model class are private attributes and all of them have relative get and set
 * functions in order to access the attributes
 *
 * @author
 */
@Entity
@NamedQuery(name = "BookOrderLine.findBySeller", query = "SELECT bol from BookOrderLine bol "
        + "where bol.seller=:seller")
public class BookOrderLine implements Serializable {

    /**
     * The definition of the attributes of BookOrderLine entity the id is the id of BookOrderLine
     * which is generated automatically by the database; the book attribute is the object of the
     * Book model class the quantity describes the number of this book in the shopping cart The type
     * of the attributes: id : Long book: Book quantity : int
     *
     */
    private Long id;
    private Book book;
    private User seller;
    private String bookCondition;
    private String shippingAddress;
    private int quantity;
    private double unitPrice;

    /**
     * The id of BookOrderLine Not null value it will be generated by database, it relates to the
     * primary key of the BookOrderLine Table
     *
     * @return a long value
     */
    @Id
    @GeneratedValue
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    /**
     * The Book attribute describes the book in the shopping cart Not null value
     *
     * @return a Book object
     */
    @ManyToOne
    public Book getBook() {
        return book;
    }

    public void setBook(Book book) {
        this.book = book;
    }

    /**
     * The quantity attribute describes the number of this book in the shopping cart Not null value
     *
     * @return an int value
     */
    public int getQuantity() {
        return quantity;
    }

    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    /**
     * Get seller
     */
    @ManyToOne
    public User getSeller() {
        return seller;
    }

    public void setSeller(User seller) {
        this.seller = seller;
    }

    /**
     * Get condition of the book. e.g. "New", "Used"
     */
    public String getBookCondition() {
        return bookCondition;
    }

    public void setBookCondition(String bookCondition) {
        this.bookCondition = bookCondition;
    }

    /**
     * Get the price of a single book
     */
    public double getUnitPrice() {
        return unitPrice;
    }

    public void setUnitPrice(double unitPrice) {
        this.unitPrice = unitPrice;
    }   

    /**
     * Get shipping address
     */
    public String getShippingAddress() {
        return shippingAddress;
    }

    public void setShippingAddress(String buyerAddress) {
        this.shippingAddress = buyerAddress;
    }
}
