package au.edu.uts.aip.domain.entity;

import java.io.Serializable;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * A Data model class to access data in the Book_sales table. 
 * A BookSales object describes the information of the sale of the book(including the book and the seller info)
 *
 * BookSales entity has properties salesId, book, seller, price, quantity and condition. 
 * All the attributes of this model class are private attributes and all of them have relative get and set functions in
 * order to access the attributes
 *
 * @author
 */
@Entity
@Table(name = "Book_sales")
@NamedQueries({
    @NamedQuery(name = "BookSales.findSales", query = "SELECT bs FROM BookSales bs where bs.book.id IN :bookIds AND bs.seller.username IN :sellerIds")
})
public class BookSales implements Serializable {
    
    /**
     * The definition of the attributes of BookSales class 
     * all Private attributes. 
     * Need the get and set functions to access - increasing the security of the data
     * book is an object of the Book entity 
     * seller is an object of the User entity 
     * price the the price of the book
     * quantity is the number of the books that is selling
     * condition is the condition of the book
     * All attributes are not null
     */
    private long salesId;
    private Book book;
    private User seller;

    
    @NotNull
    @Min(value = (long) 0.01, message = "Please set a price for the book")
    private double price;

    @NotNull
    @Size(min = 3, message = "Please enter book condition with at least 3 characters")
    private String condition;

    @NotNull
    @Min(value = 1, message = "Please enter a positive value for quantity")
    private int quantity;

    
    /**
     * The id of the Role in Bookstore_Role table 
     * Automatically generated by the database 
     * Not null value
     * Get and Set functions to access the attribute
     * @return a int
     */
    @Id
    @GeneratedValue
    public long getSalesId() {
        return salesId;
    }

    public void setSalesId(long salesId) {
        this.salesId = salesId;
    }

    @ManyToOne
    @JoinColumn(name = "book_id", referencedColumnName = "id")
    public Book getBook() {
        return book;
    }

    public void setBook(Book book) {
        this.book = book;
    }

    @ManyToOne
    @JoinColumn(name = "seller_id", referencedColumnName = "id")
    public User getSeller() {
        return seller;
    }

    public void setSeller(User seller) {
        this.seller = seller;
    }

    @JoinColumn(name = "price_id", referencedColumnName = "id")
    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    public String getCondition() {
        return condition;
    }

    public void setCondition(String condition) {
        this.condition = condition;
    }

    public int getQuantity() {
        return quantity;
    }

    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }
}
